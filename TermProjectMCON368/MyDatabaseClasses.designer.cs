#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TermProjectMCON368
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TermProjectDatabase")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertLOGIN(LOGIN instance);
    partial void UpdateLOGIN(LOGIN instance);
    partial void DeleteLOGIN(LOGIN instance);
    partial void InsertCUSTOMER_BALANCE(CUSTOMER_BALANCE instance);
    partial void UpdateCUSTOMER_BALANCE(CUSTOMER_BALANCE instance);
    partial void DeleteCUSTOMER_BALANCE(CUSTOMER_BALANCE instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertINVOICE(INVOICE instance);
    partial void UpdateINVOICE(INVOICE instance);
    partial void DeleteINVOICE(INVOICE instance);
    partial void InsertINVOICE_ROW(INVOICE_ROW instance);
    partial void UpdateINVOICE_ROW(INVOICE_ROW instance);
    partial void DeleteINVOICE_ROW(INVOICE_ROW instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::TermProjectMCON368.Properties.Settings.Default.TermProjectDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<LOGIN> LOGINs
		{
			get
			{
				return this.GetTable<LOGIN>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER_BALANCE> CUSTOMER_BALANCEs
		{
			get
			{
				return this.GetTable<CUSTOMER_BALANCE>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<INVOICE> INVOICEs
		{
			get
			{
				return this.GetTable<INVOICE>();
			}
		}
		
		public System.Data.Linq.Table<INVOICE_ROW> INVOICE_ROWs
		{
			get
			{
				return this.GetTable<INVOICE_ROW>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GET_INVOICES_IN_RANGE")]
		public ISingleResult<GET_INVOICES_IN_RANGEResult> GET_INVOICES_IN_RANGE([global::System.Data.Linq.Mapping.ParameterAttribute(Name="STARTDATE", DbType="Date")] System.Nullable<System.DateTime> sTARTDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ENDDATE", DbType="Date")] System.Nullable<System.DateTime> eNDDATE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sTARTDATE, eNDDATE);
			return ((ISingleResult<GET_INVOICES_IN_RANGEResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMERS")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CUS_ID;
		
		private string _CUS_LNAME;
		
		private string _CUS_FNAME;
		
		private string _CUS_PHONE;
		
		private string _CUS_EMAIL;
		
		private string _CUS_ADDRESS;
		
		private string _CUS_ZIPCODE;
		
		private EntitySet<LOGIN> _LOGINs;
		
		private EntitySet<CUSTOMER_BALANCE> _CUSTOMER_BALANCEs;
		
		private EntitySet<INVOICE> _INVOICEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCUS_IDChanging(string value);
    partial void OnCUS_IDChanged();
    partial void OnCUS_LNAMEChanging(string value);
    partial void OnCUS_LNAMEChanged();
    partial void OnCUS_FNAMEChanging(string value);
    partial void OnCUS_FNAMEChanged();
    partial void OnCUS_PHONEChanging(string value);
    partial void OnCUS_PHONEChanged();
    partial void OnCUS_EMAILChanging(string value);
    partial void OnCUS_EMAILChanged();
    partial void OnCUS_ADDRESSChanging(string value);
    partial void OnCUS_ADDRESSChanged();
    partial void OnCUS_ZIPCODEChanging(string value);
    partial void OnCUS_ZIPCODEChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._LOGINs = new EntitySet<LOGIN>(new Action<LOGIN>(this.attach_LOGINs), new Action<LOGIN>(this.detach_LOGINs));
			this._CUSTOMER_BALANCEs = new EntitySet<CUSTOMER_BALANCE>(new Action<CUSTOMER_BALANCE>(this.attach_CUSTOMER_BALANCEs), new Action<CUSTOMER_BALANCE>(this.detach_CUSTOMER_BALANCEs));
			this._INVOICEs = new EntitySet<INVOICE>(new Action<INVOICE>(this.attach_INVOICEs), new Action<INVOICE>(this.detach_INVOICEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CUS_ID
		{
			get
			{
				return this._CUS_ID;
			}
			set
			{
				if ((this._CUS_ID != value))
				{
					this.OnCUS_IDChanging(value);
					this.SendPropertyChanging();
					this._CUS_ID = value;
					this.SendPropertyChanged("CUS_ID");
					this.OnCUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_LNAME", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string CUS_LNAME
		{
			get
			{
				return this._CUS_LNAME;
			}
			set
			{
				if ((this._CUS_LNAME != value))
				{
					this.OnCUS_LNAMEChanging(value);
					this.SendPropertyChanging();
					this._CUS_LNAME = value;
					this.SendPropertyChanged("CUS_LNAME");
					this.OnCUS_LNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_FNAME", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string CUS_FNAME
		{
			get
			{
				return this._CUS_FNAME;
			}
			set
			{
				if ((this._CUS_FNAME != value))
				{
					this.OnCUS_FNAMEChanging(value);
					this.SendPropertyChanging();
					this._CUS_FNAME = value;
					this.SendPropertyChanged("CUS_FNAME");
					this.OnCUS_FNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_PHONE", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string CUS_PHONE
		{
			get
			{
				return this._CUS_PHONE;
			}
			set
			{
				if ((this._CUS_PHONE != value))
				{
					this.OnCUS_PHONEChanging(value);
					this.SendPropertyChanging();
					this._CUS_PHONE = value;
					this.SendPropertyChanged("CUS_PHONE");
					this.OnCUS_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_EMAIL", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string CUS_EMAIL
		{
			get
			{
				return this._CUS_EMAIL;
			}
			set
			{
				if ((this._CUS_EMAIL != value))
				{
					this.OnCUS_EMAILChanging(value);
					this.SendPropertyChanging();
					this._CUS_EMAIL = value;
					this.SendPropertyChanged("CUS_EMAIL");
					this.OnCUS_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ADDRESS", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string CUS_ADDRESS
		{
			get
			{
				return this._CUS_ADDRESS;
			}
			set
			{
				if ((this._CUS_ADDRESS != value))
				{
					this.OnCUS_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._CUS_ADDRESS = value;
					this.SendPropertyChanged("CUS_ADDRESS");
					this.OnCUS_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ZIPCODE", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string CUS_ZIPCODE
		{
			get
			{
				return this._CUS_ZIPCODE;
			}
			set
			{
				if ((this._CUS_ZIPCODE != value))
				{
					this.OnCUS_ZIPCODEChanging(value);
					this.SendPropertyChanging();
					this._CUS_ZIPCODE = value;
					this.SendPropertyChanged("CUS_ZIPCODE");
					this.OnCUS_ZIPCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_LOGIN", Storage="_LOGINs", ThisKey="CUS_ID", OtherKey="CUS_ID")]
		public EntitySet<LOGIN> LOGINs
		{
			get
			{
				return this._LOGINs;
			}
			set
			{
				this._LOGINs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_CUSTOMER_BALANCE", Storage="_CUSTOMER_BALANCEs", ThisKey="CUS_ID", OtherKey="CUS_ID")]
		public EntitySet<CUSTOMER_BALANCE> CUSTOMER_BALANCEs
		{
			get
			{
				return this._CUSTOMER_BALANCEs;
			}
			set
			{
				this._CUSTOMER_BALANCEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_INVOICE", Storage="_INVOICEs", ThisKey="CUS_ID", OtherKey="CUS_ID")]
		public EntitySet<INVOICE> INVOICEs
		{
			get
			{
				return this._INVOICEs;
			}
			set
			{
				this._INVOICEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOGINs(LOGIN entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_LOGINs(LOGIN entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
		
		private void attach_CUSTOMER_BALANCEs(CUSTOMER_BALANCE entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_CUSTOMER_BALANCEs(CUSTOMER_BALANCE entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
		
		private void attach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOGIN")]
	public partial class LOGIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CUS_ID;
		
		private string _LOG_PASSWORD;
		
		private string _LOG_USERNAME;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCUS_IDChanging(string value);
    partial void OnCUS_IDChanged();
    partial void OnLOG_PASSWORDChanging(string value);
    partial void OnLOG_PASSWORDChanged();
    partial void OnLOG_USERNAMEChanging(string value);
    partial void OnLOG_USERNAMEChanged();
    #endregion
		
		public LOGIN()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CUS_ID
		{
			get
			{
				return this._CUS_ID;
			}
			set
			{
				if ((this._CUS_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUS_IDChanging(value);
					this.SendPropertyChanging();
					this._CUS_ID = value;
					this.SendPropertyChanged("CUS_ID");
					this.OnCUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOG_PASSWORD", DbType="VarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LOG_PASSWORD
		{
			get
			{
				return this._LOG_PASSWORD;
			}
			set
			{
				if ((this._LOG_PASSWORD != value))
				{
					this.OnLOG_PASSWORDChanging(value);
					this.SendPropertyChanging();
					this._LOG_PASSWORD = value;
					this.SendPropertyChanged("LOG_PASSWORD");
					this.OnLOG_PASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOG_USERNAME", DbType="VarChar(50)")]
		public string LOG_USERNAME
		{
			get
			{
				return this._LOG_USERNAME;
			}
			set
			{
				if ((this._LOG_USERNAME != value))
				{
					this.OnLOG_USERNAMEChanging(value);
					this.SendPropertyChanging();
					this._LOG_USERNAME = value;
					this.SendPropertyChanged("LOG_USERNAME");
					this.OnLOG_USERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_LOGIN", Storage="_CUSTOMER", ThisKey="CUS_ID", OtherKey="CUS_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.LOGINs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.LOGINs.Add(this);
						this._CUS_ID = value.CUS_ID;
					}
					else
					{
						this._CUS_ID = default(string);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER_BALANCES")]
	public partial class CUSTOMER_BALANCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CUS_ID;
		
		private decimal _CUS_BALANCE;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCUS_IDChanging(string value);
    partial void OnCUS_IDChanged();
    partial void OnCUS_BALANCEChanging(decimal value);
    partial void OnCUS_BALANCEChanged();
    #endregion
		
		public CUSTOMER_BALANCE()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CUS_ID
		{
			get
			{
				return this._CUS_ID;
			}
			set
			{
				if ((this._CUS_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUS_IDChanging(value);
					this.SendPropertyChanging();
					this._CUS_ID = value;
					this.SendPropertyChanged("CUS_ID");
					this.OnCUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_BALANCE", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CUS_BALANCE
		{
			get
			{
				return this._CUS_BALANCE;
			}
			set
			{
				if ((this._CUS_BALANCE != value))
				{
					this.OnCUS_BALANCEChanging(value);
					this.SendPropertyChanging();
					this._CUS_BALANCE = value;
					this.SendPropertyChanged("CUS_BALANCE");
					this.OnCUS_BALANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_CUSTOMER_BALANCE", Storage="_CUSTOMER", ThisKey="CUS_ID", OtherKey="CUS_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.CUSTOMER_BALANCEs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.CUSTOMER_BALANCEs.Add(this);
						this._CUS_ID = value.CUS_ID;
					}
					else
					{
						this._CUS_ID = default(string);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTS")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PRO_ID;
		
		private string _PRO_NAME;
		
		private string _PRO_SNUM;
		
		private decimal _PRO_COST_P;
		
		private decimal _PRO_SALE_P;
		
		private System.DateTime _PRO_START_DATE;
		
		private EntitySet<INVOICE_ROW> _INVOICE_ROWs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRO_IDChanging(string value);
    partial void OnPRO_IDChanged();
    partial void OnPRO_NAMEChanging(string value);
    partial void OnPRO_NAMEChanged();
    partial void OnPRO_SNUMChanging(string value);
    partial void OnPRO_SNUMChanged();
    partial void OnPRO_COST_PChanging(decimal value);
    partial void OnPRO_COST_PChanged();
    partial void OnPRO_SALE_PChanging(decimal value);
    partial void OnPRO_SALE_PChanged();
    partial void OnPRO_START_DATEChanging(System.DateTime value);
    partial void OnPRO_START_DATEChanged();
    #endregion
		
		public PRODUCT()
		{
			this._INVOICE_ROWs = new EntitySet<INVOICE_ROW>(new Action<INVOICE_ROW>(this.attach_INVOICE_ROWs), new Action<INVOICE_ROW>(this.detach_INVOICE_ROWs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PRO_ID
		{
			get
			{
				return this._PRO_ID;
			}
			set
			{
				if ((this._PRO_ID != value))
				{
					this.OnPRO_IDChanging(value);
					this.SendPropertyChanging();
					this._PRO_ID = value;
					this.SendPropertyChanged("PRO_ID");
					this.OnPRO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_NAME", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string PRO_NAME
		{
			get
			{
				return this._PRO_NAME;
			}
			set
			{
				if ((this._PRO_NAME != value))
				{
					this.OnPRO_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PRO_NAME = value;
					this.SendPropertyChanged("PRO_NAME");
					this.OnPRO_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_SNUM", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PRO_SNUM
		{
			get
			{
				return this._PRO_SNUM;
			}
			set
			{
				if ((this._PRO_SNUM != value))
				{
					this.OnPRO_SNUMChanging(value);
					this.SendPropertyChanging();
					this._PRO_SNUM = value;
					this.SendPropertyChanged("PRO_SNUM");
					this.OnPRO_SNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_COST_P", DbType="Decimal(18,0) NOT NULL")]
		public decimal PRO_COST_P
		{
			get
			{
				return this._PRO_COST_P;
			}
			set
			{
				if ((this._PRO_COST_P != value))
				{
					this.OnPRO_COST_PChanging(value);
					this.SendPropertyChanging();
					this._PRO_COST_P = value;
					this.SendPropertyChanged("PRO_COST_P");
					this.OnPRO_COST_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_SALE_P", DbType="Decimal(18,0) NOT NULL")]
		public decimal PRO_SALE_P
		{
			get
			{
				return this._PRO_SALE_P;
			}
			set
			{
				if ((this._PRO_SALE_P != value))
				{
					this.OnPRO_SALE_PChanging(value);
					this.SendPropertyChanging();
					this._PRO_SALE_P = value;
					this.SendPropertyChanged("PRO_SALE_P");
					this.OnPRO_SALE_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_START_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime PRO_START_DATE
		{
			get
			{
				return this._PRO_START_DATE;
			}
			set
			{
				if ((this._PRO_START_DATE != value))
				{
					this.OnPRO_START_DATEChanging(value);
					this.SendPropertyChanging();
					this._PRO_START_DATE = value;
					this.SendPropertyChanged("PRO_START_DATE");
					this.OnPRO_START_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_INVOICE_ROW", Storage="_INVOICE_ROWs", ThisKey="PRO_ID", OtherKey="PRO_ID")]
		public EntitySet<INVOICE_ROW> INVOICE_ROWs
		{
			get
			{
				return this._INVOICE_ROWs;
			}
			set
			{
				this._INVOICE_ROWs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INVOICE_ROWs(INVOICE_ROW entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = this;
		}
		
		private void detach_INVOICE_ROWs(INVOICE_ROW entity)
		{
			this.SendPropertyChanging();
			entity.PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVOICES")]
	public partial class INVOICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _INV_ID;
		
		private string _CUS_ID;
		
		private string _EMP_ID;
		
		private System.DateTime _INV_DATE;
		
		private System.Nullable<decimal> _INV_TOTAL;
		
		private string _INV_REFCODE;
		
		private EntitySet<INVOICE_ROW> _INVOICE_ROWs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINV_IDChanging(string value);
    partial void OnINV_IDChanged();
    partial void OnCUS_IDChanging(string value);
    partial void OnCUS_IDChanged();
    partial void OnEMP_IDChanging(string value);
    partial void OnEMP_IDChanged();
    partial void OnINV_DATEChanging(System.DateTime value);
    partial void OnINV_DATEChanged();
    partial void OnINV_TOTALChanging(System.Nullable<decimal> value);
    partial void OnINV_TOTALChanged();
    partial void OnINV_REFCODEChanging(string value);
    partial void OnINV_REFCODEChanged();
    #endregion
		
		public INVOICE()
		{
			this._INVOICE_ROWs = new EntitySet<INVOICE_ROW>(new Action<INVOICE_ROW>(this.attach_INVOICE_ROWs), new Action<INVOICE_ROW>(this.detach_INVOICE_ROWs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string INV_ID
		{
			get
			{
				return this._INV_ID;
			}
			set
			{
				if ((this._INV_ID != value))
				{
					this.OnINV_IDChanging(value);
					this.SendPropertyChanging();
					this._INV_ID = value;
					this.SendPropertyChanged("INV_ID");
					this.OnINV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string CUS_ID
		{
			get
			{
				return this._CUS_ID;
			}
			set
			{
				if ((this._CUS_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUS_IDChanging(value);
					this.SendPropertyChanging();
					this._CUS_ID = value;
					this.SendPropertyChanged("CUS_ID");
					this.OnCUS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_ID", DbType="VarChar(45)")]
		public string EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					this.OnEMP_IDChanging(value);
					this.SendPropertyChanging();
					this._EMP_ID = value;
					this.SendPropertyChanged("EMP_ID");
					this.OnEMP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime INV_DATE
		{
			get
			{
				return this._INV_DATE;
			}
			set
			{
				if ((this._INV_DATE != value))
				{
					this.OnINV_DATEChanging(value);
					this.SendPropertyChanging();
					this._INV_DATE = value;
					this.SendPropertyChanged("INV_DATE");
					this.OnINV_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_TOTAL", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> INV_TOTAL
		{
			get
			{
				return this._INV_TOTAL;
			}
			set
			{
				if ((this._INV_TOTAL != value))
				{
					this.OnINV_TOTALChanging(value);
					this.SendPropertyChanging();
					this._INV_TOTAL = value;
					this.SendPropertyChanged("INV_TOTAL");
					this.OnINV_TOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_REFCODE", DbType="VarChar(100)")]
		public string INV_REFCODE
		{
			get
			{
				return this._INV_REFCODE;
			}
			set
			{
				if ((this._INV_REFCODE != value))
				{
					this.OnINV_REFCODEChanging(value);
					this.SendPropertyChanging();
					this._INV_REFCODE = value;
					this.SendPropertyChanged("INV_REFCODE");
					this.OnINV_REFCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_INVOICE_ROW", Storage="_INVOICE_ROWs", ThisKey="INV_ID", OtherKey="INV_ID")]
		public EntitySet<INVOICE_ROW> INVOICE_ROWs
		{
			get
			{
				return this._INVOICE_ROWs;
			}
			set
			{
				this._INVOICE_ROWs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_INVOICE", Storage="_CUSTOMER", ThisKey="CUS_ID", OtherKey="CUS_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.INVOICEs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.INVOICEs.Add(this);
						this._CUS_ID = value.CUS_ID;
					}
					else
					{
						this._CUS_ID = default(string);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INVOICE_ROWs(INVOICE_ROW entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = this;
		}
		
		private void detach_INVOICE_ROWs(INVOICE_ROW entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVOICE_ROW")]
	public partial class INVOICE_ROW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _INV_ID;
		
		private string _PRO_ID;
		
		private decimal _INR_PRICE;
		
		private int _INR_QUANTITY;
		
		private System.Nullable<decimal> _INR_DISCOUNT;
		
		private decimal _INR_FINAL_PRICE;
		
		private EntityRef<INVOICE> _INVOICE;
		
		private EntityRef<PRODUCT> _PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINV_IDChanging(string value);
    partial void OnINV_IDChanged();
    partial void OnPRO_IDChanging(string value);
    partial void OnPRO_IDChanged();
    partial void OnINR_PRICEChanging(decimal value);
    partial void OnINR_PRICEChanged();
    partial void OnINR_QUANTITYChanging(int value);
    partial void OnINR_QUANTITYChanged();
    partial void OnINR_DISCOUNTChanging(System.Nullable<decimal> value);
    partial void OnINR_DISCOUNTChanged();
    partial void OnINR_FINAL_PRICEChanging(decimal value);
    partial void OnINR_FINAL_PRICEChanged();
    #endregion
		
		public INVOICE_ROW()
		{
			this._INVOICE = default(EntityRef<INVOICE>);
			this._PRODUCT = default(EntityRef<PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string INV_ID
		{
			get
			{
				return this._INV_ID;
			}
			set
			{
				if ((this._INV_ID != value))
				{
					if (this._INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINV_IDChanging(value);
					this.SendPropertyChanging();
					this._INV_ID = value;
					this.SendPropertyChanged("INV_ID");
					this.OnINV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRO_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PRO_ID
		{
			get
			{
				return this._PRO_ID;
			}
			set
			{
				if ((this._PRO_ID != value))
				{
					if (this._PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRO_IDChanging(value);
					this.SendPropertyChanging();
					this._PRO_ID = value;
					this.SendPropertyChanged("PRO_ID");
					this.OnPRO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INR_PRICE", DbType="Decimal(18,0) NOT NULL")]
		public decimal INR_PRICE
		{
			get
			{
				return this._INR_PRICE;
			}
			set
			{
				if ((this._INR_PRICE != value))
				{
					this.OnINR_PRICEChanging(value);
					this.SendPropertyChanging();
					this._INR_PRICE = value;
					this.SendPropertyChanged("INR_PRICE");
					this.OnINR_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INR_QUANTITY", DbType="Int NOT NULL")]
		public int INR_QUANTITY
		{
			get
			{
				return this._INR_QUANTITY;
			}
			set
			{
				if ((this._INR_QUANTITY != value))
				{
					this.OnINR_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._INR_QUANTITY = value;
					this.SendPropertyChanged("INR_QUANTITY");
					this.OnINR_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INR_DISCOUNT", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> INR_DISCOUNT
		{
			get
			{
				return this._INR_DISCOUNT;
			}
			set
			{
				if ((this._INR_DISCOUNT != value))
				{
					this.OnINR_DISCOUNTChanging(value);
					this.SendPropertyChanging();
					this._INR_DISCOUNT = value;
					this.SendPropertyChanged("INR_DISCOUNT");
					this.OnINR_DISCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INR_FINAL_PRICE", DbType="Decimal(18,0) NOT NULL")]
		public decimal INR_FINAL_PRICE
		{
			get
			{
				return this._INR_FINAL_PRICE;
			}
			set
			{
				if ((this._INR_FINAL_PRICE != value))
				{
					this.OnINR_FINAL_PRICEChanging(value);
					this.SendPropertyChanging();
					this._INR_FINAL_PRICE = value;
					this.SendPropertyChanged("INR_FINAL_PRICE");
					this.OnINR_FINAL_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_INVOICE_ROW", Storage="_INVOICE", ThisKey="INV_ID", OtherKey="INV_ID", IsForeignKey=true)]
		public INVOICE INVOICE
		{
			get
			{
				return this._INVOICE.Entity;
			}
			set
			{
				INVOICE previousValue = this._INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INVOICE.Entity = null;
						previousValue.INVOICE_ROWs.Remove(this);
					}
					this._INVOICE.Entity = value;
					if ((value != null))
					{
						value.INVOICE_ROWs.Add(this);
						this._INV_ID = value.INV_ID;
					}
					else
					{
						this._INV_ID = default(string);
					}
					this.SendPropertyChanged("INVOICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODUCT_INVOICE_ROW", Storage="_PRODUCT", ThisKey="PRO_ID", OtherKey="PRO_ID", IsForeignKey=true)]
		public PRODUCT PRODUCT
		{
			get
			{
				return this._PRODUCT.Entity;
			}
			set
			{
				PRODUCT previousValue = this._PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODUCT.Entity = null;
						previousValue.INVOICE_ROWs.Remove(this);
					}
					this._PRODUCT.Entity = value;
					if ((value != null))
					{
						value.INVOICE_ROWs.Add(this);
						this._PRO_ID = value.PRO_ID;
					}
					else
					{
						this._PRO_ID = default(string);
					}
					this.SendPropertyChanged("PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GET_INVOICES_IN_RANGEResult
	{
		
		private string _INV_ID;
		
		private string _CUS_ID;
		
		private string _EMP_ID;
		
		private System.DateTime _INV_DATE;
		
		private System.Nullable<decimal> _INV_TOTAL;
		
		private string _INV_REFCODE;
		
		public GET_INVOICES_IN_RANGEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string INV_ID
		{
			get
			{
				return this._INV_ID;
			}
			set
			{
				if ((this._INV_ID != value))
				{
					this._INV_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ID", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string CUS_ID
		{
			get
			{
				return this._CUS_ID;
			}
			set
			{
				if ((this._CUS_ID != value))
				{
					this._CUS_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_ID", DbType="VarChar(45)")]
		public string EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					this._EMP_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime INV_DATE
		{
			get
			{
				return this._INV_DATE;
			}
			set
			{
				if ((this._INV_DATE != value))
				{
					this._INV_DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_TOTAL", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> INV_TOTAL
		{
			get
			{
				return this._INV_TOTAL;
			}
			set
			{
				if ((this._INV_TOTAL != value))
				{
					this._INV_TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INV_REFCODE", DbType="VarChar(100)")]
		public string INV_REFCODE
		{
			get
			{
				return this._INV_REFCODE;
			}
			set
			{
				if ((this._INV_REFCODE != value))
				{
					this._INV_REFCODE = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
